//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IVendorManagement")]
public interface IVendorManagement
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVendorManagement/CreateUser", ReplyAction="http://tempuri.org/IVendorManagement/CreateUserResponse")]
    int CreateUser(string externalUserID, string vendorName, string firstName, string lastName, string email, string phone);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVendorManagement/CreateUser", ReplyAction="http://tempuri.org/IVendorManagement/CreateUserResponse")]
    System.Threading.Tasks.Task<int> CreateUserAsync(string externalUserID, string vendorName, string firstName, string lastName, string email, string phone);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVendorManagement/CheckUser", ReplyAction="http://tempuri.org/IVendorManagement/CheckUserResponse")]
    System.Nullable<int> CheckUser(string externaUserID, string vendorName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVendorManagement/CheckUser", ReplyAction="http://tempuri.org/IVendorManagement/CheckUserResponse")]
    System.Threading.Tasks.Task<System.Nullable<int>> CheckUserAsync(string externaUserID, string vendorName);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVendorManagement/AllowAccessToUserTagsHierarchy", ReplyAction="http://tempuri.org/IVendorManagement/AllowAccessToUserTagsHierarchyResponse")]
    void AllowAccessToUserTagsHierarchy(string vendorName, int accessorID, int sharedUserID);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVendorManagement/AllowAccessToUserTagsHierarchy", ReplyAction="http://tempuri.org/IVendorManagement/AllowAccessToUserTagsHierarchyResponse")]
    System.Threading.Tasks.Task AllowAccessToUserTagsHierarchyAsync(string vendorName, int accessorID, int sharedUserID);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVendorManagement/DenyAccessToUserTagsHierarchy", ReplyAction="http://tempuri.org/IVendorManagement/DenyAccessToUserTagsHierarchyResponse")]
    void DenyAccessToUserTagsHierarchy(string vendorName, int accessorID, int sharedUserID);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVendorManagement/DenyAccessToUserTagsHierarchy", ReplyAction="http://tempuri.org/IVendorManagement/DenyAccessToUserTagsHierarchyResponse")]
    System.Threading.Tasks.Task DenyAccessToUserTagsHierarchyAsync(string vendorName, int accessorID, int sharedUserID);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IVendorManagementChannel : IVendorManagement, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class VendorManagementClient : System.ServiceModel.ClientBase<IVendorManagement>, IVendorManagement
{
    
    public VendorManagementClient()
    {
    }
    
    public VendorManagementClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public VendorManagementClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public VendorManagementClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public VendorManagementClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public int CreateUser(string externalUserID, string vendorName, string firstName, string lastName, string email, string phone)
    {
        return base.Channel.CreateUser(externalUserID, vendorName, firstName, lastName, email, phone);
    }
    
    public System.Threading.Tasks.Task<int> CreateUserAsync(string externalUserID, string vendorName, string firstName, string lastName, string email, string phone)
    {
        return base.Channel.CreateUserAsync(externalUserID, vendorName, firstName, lastName, email, phone);
    }
    
    public System.Nullable<int> CheckUser(string externaUserID, string vendorName)
    {
        return base.Channel.CheckUser(externaUserID, vendorName);
    }
    
    public System.Threading.Tasks.Task<System.Nullable<int>> CheckUserAsync(string externaUserID, string vendorName)
    {
        return base.Channel.CheckUserAsync(externaUserID, vendorName);
    }
    
    public void AllowAccessToUserTagsHierarchy(string vendorName, int accessorID, int sharedUserID)
    {
        base.Channel.AllowAccessToUserTagsHierarchy(vendorName, accessorID, sharedUserID);
    }
    
    public System.Threading.Tasks.Task AllowAccessToUserTagsHierarchyAsync(string vendorName, int accessorID, int sharedUserID)
    {
        return base.Channel.AllowAccessToUserTagsHierarchyAsync(vendorName, accessorID, sharedUserID);
    }
    
    public void DenyAccessToUserTagsHierarchy(string vendorName, int accessorID, int sharedUserID)
    {
        base.Channel.DenyAccessToUserTagsHierarchy(vendorName, accessorID, sharedUserID);
    }
    
    public System.Threading.Tasks.Task DenyAccessToUserTagsHierarchyAsync(string vendorName, int accessorID, int sharedUserID)
    {
        return base.Channel.DenyAccessToUserTagsHierarchyAsync(vendorName, accessorID, sharedUserID);
    }
}
